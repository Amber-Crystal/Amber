<% field_name = @fields.first.name -%>
<% human_name = @name.split("_").map(&.capitalize).join(" ") %>
require "./spec_helper"

def hash_value
<%= @fields_hash.to_s %>
end

def fields_as_params
 params = [] of String
 <%- @fields_hash.keys.map do |k| -%>
 params << "<%= k %>=#{hash_value["<%= k %>"]}"
 <%- end -%>
 params.join("&")
end

def create_model
  model = <%= class_name %>.new(hash_value)
  model.save
  model
end

class <%= class_name %>ControllerTest < Spec::Controller::Test
  getter handler : Amber::Pipe::Pipeline

  def initialize
    @handler = Amber::Pipe::Pipeline.new
    @handler.build :web do
      plug Amber::Pipe::Error.new
      plug Amber::Pipe::Logger.new
      plug Amber::Pipe::Session.new
      plug Amber::Pipe::Flash.new
    end
    @handler.prepare_pipelines
  end
end

describe <%= class_name %>ControllerTest do
  subject = <%= class_name %>ControllerTest.new

  Spec.before_each do
    <%= class_name %>.clear
  end

  it "renders <%= @name %> index template" do
    response = subject.get "/<%= @name %>s"

    response.status_code.should eq(200)
    response.body.should contain("<%= human_name %>s")
  end

  it "renders <%= @name %> show template" do
    model = create_model
    location = "/<%= @name %>s/#{model.id}"

    response = subject.get location

    response.status_code.should eq(200)
    response.body.should contain("Show <%= human_name %>")
  end

  it "renders <%= @name %> new template" do
    location = "/<%= @name %>s/new"

    response = subject.get location

    response.status_code.should eq(200)
    response.body.should contain("New <%= human_name %>")
  end

  it "renders <%= @name %> edit template" do
    model = create_model
    location = "/<%= @name %>s/#{model.id}/edit"

    response = subject.get location

    response.status_code.should eq(200)
    response.body.should contain("Edit <%= human_name %>")
  end

  it "creates a <%= @name %>" do
    response = subject.post "/<%= @name %>s", body: fields_as_params

    response.headers["Location"].should eq "/<%= @name %>s"
    response.status_code.should eq(302)
    response.body.should eq "302"
  end

  it "updates a <%= @name %>" do
    model = create_model
    response = subject.patch "/<%= @name %>s/#{model.id}", body: fields_as_params

    response.headers["Location"].should eq "/<%= @name %>s"
    response.status_code.should eq(302)
    response.body.should eq "302"
  end

  it "deletes a <%= @name %>" do
    model = create_model
    response = subject.delete "/<%= @name %>s/#{model.id}"

    response.headers["Location"].should eq "/<%= @name %>s"
    response.status_code.should eq(302)
    response.body.should eq "302"
  end
end
