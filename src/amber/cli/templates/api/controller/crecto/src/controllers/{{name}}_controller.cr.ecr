class <%= class_name %>Controller < ApplicationController
  def index
    <%= Inflector.pluralize(@name) %> = Repo.all(<%= class_name %>)
    responds_with 200 do
      json <%= Inflector.pluralize(@name) %>.to_json
    end
  end

  def show
    if <%= @name %> = Repo.get(<%= class_name %>, params["id"])
      responds_with 200 do
        json <%= @name %>.to_json
      end
    else
      responds_with 404 do
        json {status: "not found"}.to_json
      end
    end
  end

  def create
    <%= @name %> = <%= class_name %>.new
    <%= @name %>.update_from_hash(params.to_h.select(<%= @name %>_params.validate!.keys).compact)
    changeset = Repo.insert(<%= @name %>)

    if changeset.errors.any?
      responds_with 422 do
        json {status: "invalid", errors: changeset.errors}.to_json
      end
    else
      responds_with 201 do
        json <%= @name %>.to_json
      end
    end
  end

  def update
    if <%= @name %> = Repo.get(<%= class_name %>, params["id"])
      <%= @name %>.update_from_hash(params.to_h.select(<%= @name %>_params.validate!.keys).compact)
      changeset = Repo.update(<%= @name %>)

      if changeset.errors.any?
        responds_with 422 do
          json {status: "invalid", errors: changeset.errors}.to_json
        end
      else
        responds_with 200 do
          json <%= @name %>.to_json
        end
      end
    else
      responds_with 404 do
        json {status: "not found"}.to_json
      end
    end
  end

  def destroy
    if <%= @name %> = Repo.get(<%= class_name %>, params["id"])
      Repo.delete(<%= @name %>)
      responds_with 204 do
        json {status: "success"}.to_json
      end
    else
      responds_with 404 do
        json {status: "not found"}.to_json
      end
    end
  end

  def <%= @name %>_params
    params.validation do
      <%- @fields_hash.keys.each do |k| -%>
      required(:<%= k %>) { |f| !f.nil? }
      <%- end -%>
    end
  end
end
